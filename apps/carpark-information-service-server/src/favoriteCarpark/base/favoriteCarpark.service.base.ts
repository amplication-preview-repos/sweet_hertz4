/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  FavoriteCarpark as PrismaFavoriteCarpark,
  User as PrismaUser,
  Carpark as PrismaCarpark,
} from "@prisma/client";

export class FavoriteCarparkServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FavoriteCarparkCountArgs, "select">
  ): Promise<number> {
    return this.prisma.favoriteCarpark.count(args);
  }

  async favoriteCarparks(
    args: Prisma.FavoriteCarparkFindManyArgs
  ): Promise<PrismaFavoriteCarpark[]> {
    return this.prisma.favoriteCarpark.findMany(args);
  }
  async favoriteCarpark(
    args: Prisma.FavoriteCarparkFindUniqueArgs
  ): Promise<PrismaFavoriteCarpark | null> {
    return this.prisma.favoriteCarpark.findUnique(args);
  }
  async createFavoriteCarpark(
    args: Prisma.FavoriteCarparkCreateArgs
  ): Promise<PrismaFavoriteCarpark> {
    return this.prisma.favoriteCarpark.create(args);
  }
  async updateFavoriteCarpark(
    args: Prisma.FavoriteCarparkUpdateArgs
  ): Promise<PrismaFavoriteCarpark> {
    return this.prisma.favoriteCarpark.update(args);
  }
  async deleteFavoriteCarpark(
    args: Prisma.FavoriteCarparkDeleteArgs
  ): Promise<PrismaFavoriteCarpark> {
    return this.prisma.favoriteCarpark.delete(args);
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.favoriteCarpark
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }

  async getCarpark(parentId: string): Promise<PrismaCarpark | null> {
    return this.prisma.favoriteCarpark
      .findUnique({
        where: { id: parentId },
      })
      .carpark();
  }
}
